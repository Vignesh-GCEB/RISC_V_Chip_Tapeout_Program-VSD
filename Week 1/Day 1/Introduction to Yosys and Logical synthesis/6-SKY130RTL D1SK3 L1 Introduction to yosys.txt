Transcription
to uses. So synthesizer is the tool that we use for converting the RTL to netlist. This we have already seen what is RTL, what is netlist and how to go about this in the previous presentation. and uses is the synthesizer used in this course okay we are going to follow the synthesizer called uses let's look at how the flow is we have a design we have a dot lib we have seen what is a dot lib in the previous presentation we are going to apply this to uses and we are going to get the netlist from the uses netlist is the representation of the design in form of the standard cells in the .lib. So let's see how the setup goes about. I have a read Verilog command to read the design. I have a read Liberty command to read the .lib. I have a write Verilog command to write out the netlist file. Okay, so when I write out the when I execute this write very log command, I will be getting my netlist output. Kindly note this netlist is the representation of this design in the form of standard cells. These two should be one and the same. These two should be one and the same. The netlist is the representation of the design in form of the cells present in the dot lib. There are some intermediate steps which we will look in the detail when we are running the lab. Okay. Now, how do I verify my synthesis is correct? Well, how do I know I have synthesized it correctly? The tool has not messed up with my design or I have not done anything unintentional to damage my design while I'm synthesizing it. How do I vary? That means I need to verify the synthesis output as well. Correct. So how do I do that? I have my netlist. I have my test bench. We have our simulator, we go back to it, I very log and we get the VCD output from the I very log. We load the waveform in the GTK wave and we will be able to observe the stimulus. Kindly note, this stimulus should be same as output observed during RTL simulation this should be same okay And it's a very interesting note. The set of primacy, my netlist is a true representation of my design. That means the design was written as a behavioral Verilog code. My netlist is a Verilog code in terms of standard cells. But between my design and my synthesized netlist, my design in the form of RTL code and the design in the form of my netlist, the primary inputs and primary outputs have not changed. They remain the same. That means I can use the same test bench. This test bench is going to be same as RTL test bench. I don't need a new test bench for this. This test bench is going to be same as the RTL test bench. We can use the same one. So we will be walking through all these steps in the subsequent lab.